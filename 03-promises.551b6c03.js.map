{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAItB,SAAsBC,GAEpB,GADAA,EAAEC,iBACEC,EAAU,OAEd,IAAMC,GAASP,EAAKQ,SAASC,MAAMC,MAC7BC,GAAQX,EAAKQ,SAASG,KAAKD,MAC3BE,GAAUZ,EAAKQ,SAASI,OAAOF,MACrCJ,GAAW,EAEXO,YACE,WACE,IAAIC,EAAW,EACXC,EAAgBR,EAAQI,EAE5BK,EAAcF,EAAUP,GACrBU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MACjBX,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANb,EAAM,UAE9Dc,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MAClBX,EAAAsB,OAAOI,QAAQ,sBAAuCF,OAAfH,EAAS,QAAYG,OAANb,EAAM,UAGhE,IAAMgB,EAAaC,aAAY,WAC7B,GAAIZ,GAAYF,EAGd,OAFAe,cAAcF,QACdnB,GAAW,GAMbU,EAFAF,GAAY,EAEYC,GACrBE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MACjBX,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANb,EAAM,UAE9Dc,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUV,EAAKS,EAALT,MAClBX,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfH,EAAS,QAAYG,OAANb,EAAM,UAE9DM,GAAiBJ,IAChBA,KAELJ,EACAI,EACAC,MA7CJ,IAAIN,GAAW,EAiDf,SAASU,EAAcG,EAAUV,GAC/B,OAAO,IAAImB,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEV,WAAUV,UAEpBqB,EAAO,CAAEX,WAAUV,aAKzBX,EAAAsB,OAAOa,KAAK,CACVC,SAAS,EACTC,QAAS,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nlet isActive = false;\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  if (isActive) return;\n\n  const delay = +form.elements.delay.value;\n  const step = +form.elements.step.value;\n  const amount = +form.elements.amount.value;\n  isActive = true;\n\n  setTimeout(\n    () => {\n      let position = 1;\n      let intervalDelay = delay + step;\n\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      const intervalId = setInterval(() => {\n        if (position >= amount) {\n          clearInterval(intervalId);\n          isActive = false;\n          return;\n        }\n\n        position += 1;\n\n        createPromise(position, intervalDelay)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n        intervalDelay += step;\n      }, step);\n    },\n    delay,\n    step,\n    amount\n  );\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nNotify.init({\n  useIcon: false,\n  timeout: 6000,\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","e","preventDefault","$ce04d3a99e08e73b$var$isActive","delay1","elements","delay","value","step","amount","setTimeout","position1","intervalDelay","$ce04d3a99e08e73b$var$createPromise","then","param","position","Notify","success","concat","catch","failure","intervalId","setInterval","clearInterval","Promise","resolve","reject","Math","random","init","useIcon","timeout"],"version":3,"file":"03-promises.551b6c03.js.map"}